{"version":3,"sources":["components/Sentence/Sentence.module.css","components/Home/Home.module.css","components/Word/Word.module.css","components/Word/Word.js","components/Sentence/Sentence.js","components/Home/Home.js","util/constants.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Word","inflectedWord","onClick","className","css","wrapper","Sentence","sentence","React","useState","wordData","setWordData","showSentenceData","setShowSentenceData","wordObjects","base","inflectedWords","inflected","split","map","word","i","wordObject","classnames","data","sentenceData","src","theme","Home","loading","setLoading","error","setError","setSentence","fetch","method","then","response","json","catch","toString","disabled","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,KAAO,yB,mBCA/DD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,MAAQ,sB,iBCA1DD,EAAOC,QAAU,CAAC,QAAU,wB,6LCkBbC,EAdF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAC7B,OACE,sBAAMC,UAAWC,IAAIC,QAArB,SACE,wBAAQH,QAASA,EAAjB,SAA2BD,O,gBC8ClBK,EA7CE,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEjB,EAAkCC,IAAMC,SAAS,MAAjD,mBAAQC,EAAR,KAAkBC,EAAlB,KACA,EAAkDH,IAAMC,UAAS,GAAjE,mBAAQG,EAAR,KAA0BC,EAA1B,KAEMC,EAAcP,EAASQ,KACvBC,EAAiBT,EAASU,UAAUC,MAAM,KAYhD,OACE,qCACE,qBAAKf,UAAWC,IAAIG,SAApB,SACGS,EAAeG,KAAI,SAACC,EAAMC,GAAP,OAClB,cAAC,EAAD,CAAcpB,cAAemB,EAAMlB,QAAS,kBAd5BoB,EAckDR,EAAYO,GAbpFV,EAAYW,QACZT,GAAoB,GAFE,IAAAS,IAcLD,QAGf,wBAAQlB,UAAU,YAAYD,QAZF,WAC9BW,GAAoB,GACpBF,EAAY,OAUV,+BACA,wBAAQR,UAAU,YAAlB,8CACCS,GACC,qBAAKT,UAAWoB,IAAWnB,IAAIoB,KAAMpB,IAAIqB,cAAzC,SACE,cAAC,IAAD,CAAWC,IAAKnB,MAGnBG,GACC,qBAAKP,UAAWoB,IAAWnB,IAAIoB,KAAMpB,IAAIM,UAAzC,SACE,cAAC,IAAD,CAAWgB,IAAKhB,EAAUiB,MAAM,+B,gBCE3BC,EArCF,WACX,MAAgCpB,IAAMC,UAAS,GAA/C,mBAAQoB,EAAR,KAAiBC,EAAjB,KACA,EAA4BtB,IAAMC,SAAS,MAA3C,mBAAQsB,EAAR,KAAeC,EAAf,KACA,EAAkCxB,IAAMC,SAAS,MAAjD,mBAAQF,EAAR,KAAkB0B,EAAlB,KAoBA,OACE,sBAAK9B,UAAWC,IAAIC,QAApB,UACE,2CACA,wBAAQF,UAAU,YAAYD,QArBd,WAClB4B,GAAW,GAEXI,MAAM,GAAD,OCfL,sCDeK,cAA8C,CACjDC,OAAQ,SAEPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJL,EAAYK,GACZR,GAAW,GACXE,EAAS,SAEVO,OAAM,SAAAR,GACLC,EAASD,EAAMS,YACfV,GAAW,OAOuCW,SAAUZ,EAA9D,+BACCE,GACC,oBAAG5B,UAAWC,IAAI2B,MAAlB,oBAAiCA,KAElCxB,IAAawB,GACZ,cAAC,EAAD,CAAUxB,SAAUA,QE3BbmC,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92227060.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sentence\":\"Sentence_sentence__2EqTb\",\"data\":\"Sentence_data__45Th7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__299gS\",\"error\":\"Home_error__4bpb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Word_wrapper__1fL4w\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './Word.module.css';\n\nconst Word = ({ inflectedWord, onClick }) => {\n  return (\n    <span className={css.wrapper}>\n      <button onClick={onClick}>{inflectedWord}</button>\n    </span>\n  );\n};\n\n\nWord.propTypes = {\n  inflectedWord: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired\n};\n\nexport default Word;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactJson from 'react-json-view';\nimport classnames from 'classnames';\n\nimport Word from '../Word/Word';\n\nimport css from './Sentence.module.css';\n\nconst Sentence = ({sentence}) => {\n  // TODO: Enable finding words that are actually multiple words (like \"banana peel\")\n  const [ wordData, setWordData ] = React.useState(null);\n  const [ showSentenceData, setShowSentenceData ] = React.useState(false);\n\n  const wordObjects = sentence.base;\n  const inflectedWords = sentence.inflected.split(' ');\n\n  const handleWordClick = wordObject => {\n    setWordData(wordObject);\n    setShowSentenceData(false);\n  };\n\n  const handleSentenceDataClick = () => {\n    setShowSentenceData(true);\n    setWordData(null);\n  }\n\n  return (\n    <>\n      <div className={css.sentence}>\n        {inflectedWords.map((word, i) =>\n          <Word key={i} inflectedWord={word} onClick={() => handleWordClick(wordObjects[i])}/>\n        )}\n      </div>\n      <button className=\"appButton\" onClick={handleSentenceDataClick}>See sentence data</button>\n      <button className=\"appButton\" >Is this grammatically incorrect?</button>\n      {showSentenceData &&\n        <div className={classnames(css.data, css.sentenceData)}>\n          <ReactJson src={sentence}/>\n        </div>\n      }\n      {wordData &&\n        <div className={classnames(css.data, css.wordData)}>\n          <ReactJson src={wordData} theme=\"summerfruit:inverted\"/>\n        </div>\n      }\n    </>\n  );\n};\n\nSentence.propTypes = {\n  sentence: PropTypes.object.isRequired\n};\n\nexport default Sentence;\n","import React from 'react';\n\nimport * as constants from '../../util/constants';\n\nimport Sentence from '../Sentence/Sentence';\n\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [ loading, setLoading ] = React.useState(false);\n  const [ error, setError ] = React.useState(null);\n  const [ sentence, setSentence ] = React.useState(null);\n\n  const handleClick = () => {\n    setLoading(true);\n\n    fetch(`${constants.RANDSENSE_API_BASE}sentences/`, {\n      method: \"POST\"\n    })\n      .then(response => response.json())\n      .then(json => {\n        setSentence(json);\n        setLoading(false);\n        setError(null);\n      })\n      .catch(error => {\n        setError(error.toString());\n        setLoading(false);\n      })\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <h1>RandSense</h1>\n      <button className=\"appButton\" onClick={handleClick} disabled={loading}>Generate sentence</button>\n      {error &&\n        <p className={css.error}>Error: {error}</p>\n      }\n      {sentence && !error &&\n        <Sentence sentence={sentence}/>\n      }\n    </div>\n  );\n};\n\nexport default Home;\n","export const RANDSENSE_API_BASE = process.env.NODE_ENV === 'production'\n  ? 'https://jamey.wtf/randsense/api/v1/'\n  : 'http://localhost:8000/randsense/api/v1/'\n","import './App.css';\n\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}